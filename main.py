import os
import threading
import time
import logging
from datetime import datetime
import sqlite3

# === –û—Ç–∫–ª—é—á–∞–µ–º –ª–∏—à–Ω–∏–µ –ª–æ–≥–∏ ===
logging.getLogger("gunicorn").setLevel(logging.WARNING)
logging.getLogger("urllib3").setLevel(logging.WARNING)

from flask import Flask, request, jsonify
import telebot
from telebot import types

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è ===
app = Flask(__name__)

# === –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è ===
BOT_TOKEN = os.getenv("BOT_TOKEN")
if not BOT_TOKEN:
    raise RuntimeError("‚ùå –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!")

CHANNEL_ID = os.getenv("CHANNEL_ID", "@your_channel")  # ‚Üê –ó–ê–ú–ï–ù–ò –ù–ê –°–í–û–ô –ö–ê–ù–ê–õ!
PORT = int(os.getenv("PORT", 443))  # üî• –ò–°–ü–†–ê–í–õ–ï–ù–û: 443 –≤–º–µ—Å—Ç–æ 8000

# === –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ ===
bot = telebot.TeleBot(BOT_TOKEN)

# === –ü—É—Ç—å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö ===
DB_PATH = "blinds_bot.db"

# === –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö ===
def init_db():
    print("üîß [DB] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    conn = sqlite3.connect(DB_PATH)
    cursor = conn.cursor()

    cursor.execute('''
        CREATE TABLE IF NOT EXISTS products (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            name TEXT NOT NULL,
            description TEXT,
            price REAL,
            category TEXT,
            image_url TEXT
        )
    ''')

    cursor.execute('''
        CREATE TABLE IF NOT EXISTS orders (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            user_id INTEGER,
            product_id INTEGER,
            user_name TEXT,
            phone TEXT,
            address TEXT,
            status TEXT DEFAULT 'new',
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
        )
    ''')

    cursor.execute('''
        CREATE TABLE IF NOT EXISTS users (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            user_id INTEGER UNIQUE,
            username TEXT,
            first_name TEXT,
            last_name TEXT,
            registered_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
        )
    ''')

    cursor.execute('''
        CREATE TABLE IF NOT EXISTS messages (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            user_id INTEGER,
            message TEXT,
            is_from_user BOOLEAN,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
        )
    ''')

    cursor.execute('''
        CREATE TABLE IF NOT EXISTS smm_content (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            content TEXT,
            image_url TEXT,
            category TEXT,
            scheduled_time TIMESTAMP,
            is_published BOOLEAN DEFAULT 0,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
        )
    ''')

    cursor.execute('''
        CREATE TABLE IF NOT EXISTS subscribers (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            user_id INTEGER UNIQUE,
            username TEXT,
            first_name TEXT,
            last_name TEXT,
            subscribed_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
        )
    ''')

    conn.commit()
    conn.close()
    print("‚úÖ [DB] –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞.")

# === –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö (–µ—Å–ª–∏ –ø—É—Å—Ç–æ) ===
def add_sample_data():
    print("üìö [DB] –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...")
    conn = sqlite3.connect(DB_PATH)
    cursor = conn.cursor()

    cursor.execute("SELECT COUNT(*) FROM products")
    if cursor.fetchone()[0] == 0:
        products = [
            ("–†—É–ª–æ–Ω–Ω—ã–µ —à—Ç–æ—Ä—ã –¥–µ–Ω—å-–Ω–æ—á—å", "–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ä—É–ª–æ–Ω–Ω—ã–µ —à—Ç–æ—Ä—ã —Å –¥–≤—É–º—è —Ä–µ–∂–∏–º–∞–º–∏ –∑–∞—Ç–µ–º–Ω–µ–Ω–∏—è: —Å–≤–µ—Ç–ª—ã–π –∏ —Ç—ë–º–Ω—ã–π. –ò–¥–µ–∞–ª—å–Ω–æ –¥–ª—è —Å–ø–∞–ª—å–Ω–∏ –∏ –≥–æ—Å—Ç–∏–Ω–æ–π.", 2490.0, "–†—É–ª–æ–Ω–Ω—ã–µ —à—Ç–æ—Ä—ã", "https://i.ibb.co/6YfGvKk/rulonnye-katalog.jpg"),
            ("–í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–µ –∂–∞–ª—é–∑–∏ –∏–∑ —Ç–∫–∞–Ω–∏", "–≠–ª–µ–≥–∞–Ω—Ç–Ω—ã–µ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–µ –∂–∞–ª—é–∑–∏ –∏–∑ –ø–ª–æ—Ç–Ω–æ–π —Ç–∫–∞–Ω–∏. –†–µ–≥—É–ª–∏—Ä—É–µ–º—ã–π —Å–≤–µ—Ç –∏ –ø–æ–ª–Ω–∞—è –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å.", 3290.0, "–ñ–∞–ª—é–∑–∏", "https://i.ibb.co/6YfGvKk/rulonnye-katalog.jpg"),
            ("–ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–µ –∞–ª—é–º–∏–Ω–∏–µ–≤—ã–µ –∂–∞–ª—é–∑–∏", "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ –∞–ª—é–º–∏–Ω–∏–µ–≤—ã–µ –∂–∞–ª—é–∑–∏ —Å –ø–æ–≤–æ—Ä–æ—Ç–æ–º –ª–∞–º–µ–ª–µ–π. –õ–µ–≥–∫–æ –º–æ—é—Ç—Å—è, –ø–æ–¥—Ö–æ–¥—è—Ç –¥–ª—è –∫—É—Ö–Ω–∏ –∏ –≤–∞–Ω–Ω–æ–π.", 1890.0, "–ñ–∞–ª—é–∑–∏", "https://i.ibb.co/6YfGvKk/rulonnye-katalog.jpg"),
            ("–†–∏–º—Å–∫–∏–µ —à—Ç–æ—Ä—ã —Å –ª–∞–º–±—Ä–µ–∫–µ–Ω–æ–º", "–®–∏–∫–∞—Ä–Ω—ã–µ —Ä–∏–º—Å–∫–∏–µ —à—Ç–æ—Ä—ã —Å –¥–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–º –ª–∞–º–±—Ä–µ–∫–µ–Ω–æ–º. –ü–æ–¥—á–µ—Ä–∫–Ω—É—Ç –≤–∞—à –∏–Ω—Ç–µ—Ä—å–µ—Ä –≤ —Å—Ç–∏–ª–µ –ª–æ—Ñ—Ç –∏–ª–∏ —Å–∫–∞–Ω–¥–∏–Ω–∞–≤–∏—è.", 3990.0, "–®—Ç–æ—Ä—ã", "https://i.ibb.co/6YfGvKk/rulonnye-katalog.jpg"),
            ("–†—É–ª–æ–Ω–Ω—ã–µ —à—Ç–æ—Ä—ã –∑–µ–±—Ä–∞", "–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –¥–∏–∑–∞–π–Ω —Å —á–µ—Ä–µ–¥—É—é—â–∏–º–∏—Å—è –ø–æ–ª–æ—Å–∞–º–∏ –±–µ–ª–æ–≥–æ –∏ —Å–µ—Ä–æ–≥–æ. –î–Ω–µ–≤–Ω–æ–π –∏ –Ω–æ—á–Ω–æ–π —Ä–µ–∂–∏–º –≤ –æ–¥–Ω–æ–π —à—Ç–æ—Ä–µ.", 2790.0, "–†—É–ª–æ–Ω–Ω—ã–µ —à—Ç–æ—Ä—ã", "https://i.ibb.co/6YfGvKk/rulonnye-katalog.jpg"),
            ("–î–µ—Ä–µ–≤—è–Ω–Ω—ã–µ –∂–∞–ª—é–∑–∏ –ø—Ä–µ–º–∏—É–º", "–ù–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ –¥–µ—Ä–µ–≤–æ ‚Äî –¥—É–± –∏ –æ—Ä–µ—Ö. –¢–µ–ø–ª–æ, —ç–∫–æ–ª–æ–≥–∏—á–Ω–æ, –¥–æ–ª–≥–æ–≤–µ—á–Ω–æ. –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –æ—Ñ–∏—Å–∞ –∏ –¥–æ–º–∞.", 4590.0, "–ñ–∞–ª—é–∑–∏", "https://i.ibb.co/6YfGvKk/rulonnye-katalog.jpg"),
            ("–†—É–ª–æ–Ω–Ω—ã–µ —à—Ç–æ—Ä—ã \"–¢—É–º–∞–Ω\"", "–ü–æ–ª—É–ø—Ä–æ–∑—Ä–∞—á–Ω—ã–µ —à—Ç–æ—Ä—ã —Å —ç—Ñ—Ñ–µ–∫—Ç–æ–º –º—è–≥–∫–æ–≥–æ —Ä–∞—Å—Å–µ–∏–≤–∞–Ω–∏—è —Å–≤–µ—Ç–∞. –ò–¥–µ–∞–ª—å–Ω—ã –¥–ª—è –¥–µ—Ç—Å–∫–æ–π –∏ —Ä–∞–±–æ—á–µ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞.", 2190.0, "–†—É–ª–æ–Ω–Ω—ã–µ —à—Ç–æ—Ä—ã", "https://i.ibb.co/6YfGvKk/rulonnye-katalog.jpg"),
            ("–ñ–∞–ª—é–∑–∏ \"–ë–∞–º–±—É–∫\"", "–≠–∫–æ-–∂–∞–ª—é–∑–∏ –∏–∑ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–≥–æ –±–∞–º–±—É–∫–∞. –ü—Ä–∏—Ä–æ–¥–Ω–∞—è —Ç–µ–∫—Å—Ç—É—Ä–∞, —É—é—Ç, —Ç–∏—à–∏–Ω–∞. –î–ª—è —Å–ø–∞–ª—å–Ω–∏ –∏ —Ç–µ—Ä—Ä–∞—Å—ã.", 3790.0, "–ñ–∞–ª—é–∑–∏", "https://i.ibb.co/6YfGvKk/rulonnye-katalog.jpg"),
            ("–†–∏–º—Å–∫–∏–µ —à—Ç–æ—Ä—ã —Å –ø–æ–¥—Å–≤–µ—Ç–∫–æ–π", "–£–º–Ω—ã–µ —Ä–∏–º—Å–∫–∏–µ —à—Ç–æ—Ä—ã —Å–æ –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–π LED-–ø–æ–¥—Å–≤–µ—Ç–∫–æ–π –ø–æ –∫–æ–Ω—Ç—É—Ä—É. –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏–ª–∏ –ø—É–ª—å—Ç.", 5990.0, "–®—Ç–æ—Ä—ã", "https://i.ibb.co/6YfGvKk/rulonnye-katalog.jpg"),
            ("–†—É–ª–æ–Ω–Ω—ã–µ —à—Ç–æ—Ä—ã \"–ú—Ä–∞–º–æ—Ä\"", "–ò–º–∏—Ç–∞—Ü–∏—è –º—Ä–∞–º–æ—Ä–Ω–æ–≥–æ —É–∑–æ—Ä–∞ –Ω–∞ —Ç–∫–∞–Ω–∏. –†–æ—Å–∫–æ—à—å –±–µ–∑ –ª–∏—à–Ω–∏—Ö –∑–∞—Ç—Ä–∞—Ç. –î–ª—è —ç–ª–∏—Ç–Ω—ã—Ö –∏–Ω—Ç–µ—Ä—å–µ—Ä–æ–≤.", 3490.0, "–†—É–ª–æ–Ω–Ω—ã–µ —à—Ç–æ—Ä—ã", "https://i.ibb.co/6YfGvKk/rulonnye-katalog.jpg")
        ]
        cursor.executemany("INSERT INTO products (name, description, price, category, image_url) VALUES (?, ?, ?, ?, ?)", products)
        print("‚úÖ [DB] –¢–µ—Å—Ç–æ–≤—ã–µ —Ç–æ–≤–∞—Ä—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã.")

    # SMM –∫–æ–Ω—Ç–µ–Ω—Ç
    cursor.execute("SELECT COUNT(*) FROM smm_content")
    if cursor.fetchone()[0] == 0:
        smm_content = [
            ("5 –ø—Ä–∏—á–∏–Ω –≤—ã–±—Ä–∞—Ç—å —Ä—É–ª–æ–Ω–Ω—ã–µ —à—Ç–æ—Ä—ã", "–†—É–ª–æ–Ω–Ω—ã–µ —à—Ç–æ—Ä—ã - –∏–¥–µ–∞–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä—å–µ—Ä–∞. –û–Ω–∏ –ø—Ä–∞–∫—Ç–∏—á–Ω—ã, –∫—Ä–∞—Å–∏–≤—ã –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã!", "https://placehold.co/600x400/4b6cb7/white?text=–†—É–ª–æ–Ω–Ω—ã–µ+—à—Ç–æ—Ä—ã", "–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ", None, 1),
            ("–ö–∞–∫ –≤—ã–±—Ä–∞—Ç—å –∂–∞–ª—é–∑–∏ –¥–ª—è –∫—É—Ö–Ω–∏", "–ö—É—Ö–Ω—è —Ç—Ä–µ–±—É–µ—Ç –æ—Å–æ–±–æ–≥–æ –ø–æ–¥—Ö–æ–¥–∞ –∫ –≤—ã–±–æ—Ä—É –∂–∞–ª—é–∑–∏. –†–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ–º, –Ω–∞ —á—Ç–æ –æ–±—Ä–∞—Ç–∏—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ!", "https://placehold.co/600x400/182848/white?text=–ñ–∞–ª—é–∑–∏+–¥–ª—è+–∫—É—Ö–Ω–∏", "–°–æ–≤–µ—Ç—ã", None, 1),
            ("–¢—Ä–µ–Ω–¥—ã 2023: –ß—Ç–æ –≤ –º–æ–¥–µ —É —à—Ç–æ—Ä", "–°–ª–µ–¥–∏—Ç–µ –∑–∞ –º–æ–¥–æ–π –∏ –≤ –∏–Ω—Ç–µ—Ä—å–µ—Ä–µ! –†–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ–º –æ –≥–ª–∞–≤–Ω—ã—Ö —Ç—Ä–µ–Ω–¥–∞—Ö –≤ –º–∏—Ä–µ —à—Ç–æ—Ä —ç—Ç–æ–≥–æ –≥–æ–¥–∞.", "https://placehold.co/600x400/ff6b6b/white?text=–¢—Ä–µ–Ω–¥—ã+2023", "–¢—Ä–µ–Ω–¥—ã", None, 1),
            ("–°—Ä–∞–≤–Ω–µ–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤: –¢–∫–∞–Ω—å vs –ü–í–•", "–ö–∞–∫–æ–π –º–∞—Ç–µ—Ä–∏–∞–ª –≤—ã–±—Ä–∞—Ç—å –¥–ª—è —Ä—É–ª–æ–Ω–Ω—ã—Ö —à—Ç–æ—Ä? –†–∞–∑–±–∏—Ä–∞–µ–º—Å—è –≤ –ø–ª—é—Å–∞—Ö –∏ –º–∏–Ω—É—Å–∞—Ö –∫–∞–∂–¥–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞.", "https://placehold.co/600x400/27ae60/white?text=–ú–∞—Ç–µ—Ä–∏–∞–ª—ã", "–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ", None, 1),
            ("–î–∏–∑–∞–π–Ω —Å–ø–∞–ª—å–Ω–∏ —Å –∏–¥–µ–∞–ª—å–Ω—ã–º–∏ —à—Ç–æ—Ä–∞–º–∏", "–°–æ–∑–¥–∞–π—Ç–µ —É—é—Ç–Ω—É—é –∞—Ç–º–æ—Å—Ñ–µ—Ä—É –≤ —Å–ø–∞–ª—å–Ω–µ —Å –ø–æ–º–æ—â—å—é –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø–æ–¥–æ–±—Ä–∞–Ω–Ω—ã—Ö —à—Ç–æ—Ä!", "https://placehold.co/600x400/f39c12/white?text=–î–∏–∑–∞–π–Ω+—Å–ø–∞–ª—å–Ω–∏", "–î–∏–∑–∞–π–Ω", None, 1)
        ]
        cursor.executemany("INSERT INTO smm_content (title, content, image_url, category, scheduled_time, is_published) VALUES (?, ?, ?, ?, ?, ?)", smm_content)
        print("‚úÖ [DB] –¢–µ—Å—Ç–æ–≤—ã–π SMM –∫–æ–Ω—Ç–µ–Ω—Ç –¥–æ–±–∞–≤–ª–µ–Ω.")

    conn.commit()
    conn.close()

# === –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö ===
def save_user(user):
    conn = sqlite3.connect(DB_PATH)
    cursor = conn.cursor()
    try:
        cursor.execute('''
            INSERT OR REPLACE INTO users (user_id, username, first_name, last_name)
            VALUES (?, ?, ?, ?)
        ''', (user.id, user.username, user.first_name, user.last_name))
        conn.commit()
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")
    finally:
        conn.close()

def save_subscriber(user):
    conn = sqlite3.connect(DB_PATH)
    cursor = conn.cursor()
    try:
        cursor.execute('''
            INSERT OR REPLACE INTO subscribers (user_id, username, first_name, last_name)
            VALUES (?, ?, ?, ?)
        ''', (user.id, user.username, user.first_name, user.last_name))
        conn.commit()
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å—á–∏–∫–∞: {e}")
    finally:
        conn.close()

def save_message(user_id, text, is_from_user):
    conn = sqlite3.connect(DB_PATH)
    cursor = conn.cursor()
    try:
        cursor.execute('''
            INSERT INTO messages (user_id, message, is_from_user)
            VALUES (?, ?, ?)
        ''', (user_id, text, is_from_user))
        conn.commit()
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
    finally:
        conn.close()

# === –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞ ===
@bot.message_handler(commands=['start'])
def send_welcome(message):
    try:
        print(f"ü§ñ [BOT] –û–±—Ä–∞–±–æ—Ç—á–∏–∫ /start –≤—ã–∑–≤–∞–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id}")
        save_user(message.from_user)
        save_message(message.from_user.id, message.text, True)

        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        btn_catalog = types.KeyboardButton("üìö –ö–∞—Ç–∞–ª–æ–≥")
        btn_order = types.KeyboardButton("üõí –ó–∞–∫–∞–∑–∞—Ç—å")
        btn_channel = types.KeyboardButton("üîó –ö–∞–Ω–∞–ª")
        btn_contacts = types.KeyboardButton("üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã")
        btn_whatsapp = types.KeyboardButton("üí¨ WhatsApp")
        btn_help = types.KeyboardButton("‚ÑπÔ∏è –ü–æ–º–æ—â—å")

        markup.add(btn_catalog, btn_order)
        markup.add(btn_channel, btn_contacts)
        markup.add(btn_whatsapp, btn_help)

        bot.reply_to(
            message,
            "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∞–≥–∞–∑–∏–Ω —Ä—É–ª–æ–Ω–Ω—ã—Ö —à—Ç–æ—Ä –∏ –∂–∞–ª—é–∑–∏ –ê—Å—Ç—Ä–∞—Ö–∞–Ω—å!\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª:",
            reply_markup=markup
        )
        print(f"‚úÖ [BOT] –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ –º–µ–Ω—é –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {message.from_user.id}")
    except Exception as e:
        print(f"‚ùå [BOT] –û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ /start: {e}")
        import traceback
        traceback.print_exc()


# === üé® –ö–†–ê–°–ò–í–û –û–§–û–†–ú–õ–ï–ù–ù–´–ô –ö–ê–¢–ê–õ–û–ì –° –ö–ù–û–ü–ö–ê–ú–ò ===
@bot.message_handler(func=lambda m: m.text == "üìö –ö–∞—Ç–∞–ª–æ–≥")
def show_catalog(message):
    try:
        print(f"ü§ñ [BOT] –û–±—Ä–∞–±–æ—Ç—á–∏–∫ '–ö–∞—Ç–∞–ª–æ–≥' –≤—ã–∑–≤–∞–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id}")
        save_message(message.from_user.id, message.text, True)

        # üé® –ö—Ä–∞—Å–∏–≤–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ —Å —ç–º–æ–¥–∑–∏ –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π
        text = (
            "‚ú® *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫–∞—Ç–∞–ª–æ–≥ ¬´–§–∞–±—Ä–∏–∫–∞ –ñ–∞–ª—é–∑–∏ 30¬ª!* ‚ú®\n\n"
            "üõçÔ∏è *–ü–æ–ª–Ω—ã–π –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç* —Å —Ñ–æ—Ç–æ, —Ü–µ–Ω–∞–º–∏ –∏ –æ–ø–∏—Å–∞–Ω–∏—è–º–∏ ‚Äî –Ω–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ.\n"
            "üì≤ *–•–æ—Ç–∏—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å –∏–ª–∏ —É—Ç–æ—á–Ω–∏—Ç—å –¥–µ—Ç–∞–ª–∏?* ‚Äî –º—ã –Ω–∞ —Å–≤—è–∑–∏ 24/7!\n\n"
            "üëá *–í—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω—ã–π —Å–ø–æ—Å–æ–± —Å–≤—è–∑–∏:*"
        )

        # üéõ Inline-–∫–Ω–æ–ø–∫–∏ (–∫—Ä–∞—Å–∏–≤—ã–µ, –∫–æ–º–ø–∞–∫—Ç–Ω—ã–µ, –Ω–µ –∑–∞—Å–æ—Ä—è—é—Ç —á–∞—Ç)
        markup = types.InlineKeyboardMarkup(row_width=1)
        btn_site = types.InlineKeyboardButton("üåê –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç", url="https://—Ñ–∞–±—Ä–∏–∫–∞-–∂–∞–ª—é–∑–∏30.—Ä—Ñ/?ysclid=mfkymrmgp2925319979")
        btn_whatsapp = types.InlineKeyboardButton("üí¨ –ù–∞–ø–∏—Å–∞—Ç—å –≤ WhatsApp", url="https://wa.me/+79378222906")
        btn_call = types.InlineKeyboardButton("üìû –ó–∞–∫–∞–∑–∞—Ç—å –∑–≤–æ–Ω–æ–∫", callback_data="request_call")

        markup.add(btn_site, btn_whatsapp, btn_call)

        bot.reply_to(
            message,
            text,
            parse_mode='Markdown',
            reply_markup=markup,
            disable_web_page_preview=False
        )

        print(f"‚úÖ [BOT] –ö—Ä–∞—Å–∏–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {message.from_user.id}")

    except Exception as e:
        print(f"‚ùå [CATALOG] –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()


@bot.message_handler(func=lambda m: m.text == "üõí –ó–∞–∫–∞–∑–∞—Ç—å")
def ask_for_order(message):
    try:
        print(f"ü§ñ [BOT] –û–±—Ä–∞–±–æ—Ç—á–∏–∫ '–ó–∞–∫–∞–∑–∞—Ç—å' –≤—ã–∑–≤–∞–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id}")
        save_message(message.from_user.id, message.text, True)

        bot.reply_to(
            message,
            "üìù –ß—Ç–æ–±—ã –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ:\n\n"
            "1. ‚úèÔ∏è –†–∞–∑–º–µ—Ä—ã –æ–∫–Ω–∞ (—à–∏—Ä–∏–Ω–∞ √ó –≤—ã—Å–æ—Ç–∞ –≤ —Å–º)\n"
            "2. üé® –¶–≤–µ—Ç –∏–ª–∏ —Ç–µ–∫—Å—Ç—É—Ä–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: –±–µ–ª—ã–π –º–∞—Ç–æ–≤—ã–π, –¥—É–± —Å–≤–µ—Ç–ª—ã–π)\n"
            "3. üìç –ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏ (–≥–æ—Ä–æ–¥, —É–ª–∏—Ü–∞, –¥–æ–º, –∫–≤–∞—Ä—Ç–∏—Ä–∞)\n\n"
            "–Ø –ø–µ—Ä–µ–∑–≤–æ–Ω—é –≤–∞–º –≤ —Ç–µ—á–µ–Ω–∏–µ 15 –º–∏–Ω—É—Ç –∏ –ø–æ–¥—Ç–≤–µ—Ä–∂—É —Å—Ç–æ–∏–º–æ—Å—Ç—å!"
        )
        print(f"‚úÖ [BOT] –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∑–∞–∫–∞–∑—É –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {message.from_user.id}")
    except Exception as e:
        print(f"‚ùå [BOT] –û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ '–ó–∞–∫–∞–∑–∞—Ç—å': {e}")
        import traceback
        traceback.print_exc()


@bot.message_handler(func=lambda m: m.text == "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã")
def show_contacts(message):
    try:
        print(f"ü§ñ [BOT] –û–±—Ä–∞–±–æ—Ç—á–∏–∫ '–ö–æ–Ω—Ç–∞–∫—Ç—ã' –≤—ã–∑–≤–∞–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id}")
        save_message(message.from_user.id, message.text, True)

        bot.reply_to(
            message,
            "üìç *–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è*:\n\n"
            "üìû –¢–µ–ª–µ—Ñ–æ–Ω: +7 (937) 822-29-06\n"
            "‚è∞ –†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã: 9:00 ‚Äî 19:00 (–µ–∂–µ–¥–Ω–µ–≤–Ω–æ)\n"
            "üè† –ê–¥—Ä–µ—Å: –≥. –ê—Å—Ç—Ä–∞—Ö–∞–Ω—å, —É–ª. –õ–µ–Ω–∏–Ω–∞, –¥. 10, –æ—Ñ–∏—Å 5\n\n"
            "üì≤ –¢–∞–∫–∂–µ –ø–∏—à–∏—Ç–µ –≤ WhatsApp: üëá\n"
            "https://wa.me/+79378222906",  # ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –£–ë–†–ê–ù –õ–ò–®–ù–ò–ô –ü–†–û–ë–ï–õ
            parse_mode='Markdown'
        )
        print(f"‚úÖ [BOT] –ö–æ–Ω—Ç–∞–∫—Ç—ã –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {message.from_user.id}")
    except Exception as e:
        print(f"‚ùå [BOT] –û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ '–ö–æ–Ω—Ç–∞–∫—Ç—ã': {e}")
        import traceback
        traceback.print_exc()


@bot.message_handler(func=lambda m: m.text == "üí¨ WhatsApp")
def open_whatsapp(message):
    try:
        print(f"ü§ñ [BOT] –û–±—Ä–∞–±–æ—Ç—á–∏–∫ 'WhatsApp' –≤—ã–∑–≤–∞–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id}")
        save_message(message.from_user.id, message.text, True)

        whatsapp_number = "+79378222906"
        whatsapp_url = f"https://wa.me/{whatsapp_number}"  # ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –£–ë–†–ê–ù –õ–ò–®–ù–ò–ô –ü–†–û–ë–ï–õ

        bot.reply_to(
            message,
            f"üí¨ –ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å –≤ WhatsApp:\n\n"
            f"{whatsapp_url}\n\n"
            "–ú—ã –æ—Ç–≤–µ—Ç–∏–º –≤ —Ç–µ—á–µ–Ω–∏–µ 10 –º–∏–Ω—É—Ç!",
            disable_web_page_preview=False,
            reply_markup=types.InlineKeyboardMarkup([
                [types.InlineKeyboardButton("üì≤ –û—Ç–∫—Ä—ã—Ç—å —á–∞—Ç", url=whatsapp_url)]
            ])
        )
        print(f"‚úÖ [BOT] –°—Å—ã–ª–∫–∞ –Ω–∞ WhatsApp –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {message.from_user.id}")

    except Exception as e:
        print(f"‚ùå [BOT] –û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ 'WhatsApp': {e}")
        import traceback
        traceback.print_exc()


@bot.message_handler(func=lambda m: m.text == "üîó –ö–∞–Ω–∞–ª")
def open_channel(message):
    try:
        print(f"ü§ñ [BOT] –û–±—Ä–∞–±–æ—Ç—á–∏–∫ '–ö–∞–Ω–∞–ª' –≤—ã–∑–≤–∞–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id}")
        save_message(message.from_user.id, message.text, True)

        bot.reply_to(
            message,
            f"üì¢ –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –Ω–∞—à Telegram-–∫–∞–Ω–∞–ª –¥–ª—è –∞–∫—Ü–∏–π –∏ –Ω–æ–≤–∏–Ω–æ–∫:\n\n{CHANNEL_ID}\n\n(–Ω–∞–∂–º–∏—Ç–µ –Ω–∞ —Å—Å—ã–ª–∫—É –≤—ã—à–µ)",
            disable_web_page_preview=False
        )
        print(f"‚úÖ [BOT] –°—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {message.from_user.id}")
    except Exception as e:
        print(f"‚ùå [BOT] –û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ '–ö–∞–Ω–∞–ª': {e}")
        import traceback
        traceback.print_exc()


@bot.message_handler(func=lambda m: m.text == "‚ÑπÔ∏è –ü–æ–º–æ—â—å")
def send_help(message):
    try:
        print(f"ü§ñ [BOT] –û–±—Ä–∞–±–æ—Ç—á–∏–∫ '–ü–æ–º–æ—â—å' –≤—ã–∑–≤–∞–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id}")
        save_message(message.from_user.id, message.text, True)

        help_text = (
            "üìå *–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –±–æ—Ç–∞*:\n\n"
            "‚Ä¢ *–ö–∞—Ç–∞–ª–æ–≥* ‚Äî –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ —Ç–æ–≤–∞—Ä—ã —Å —Ñ–æ—Ç–æ –∏ —Ü–µ–Ω–∞–º–∏\n"
            "‚Ä¢ *–ó–∞–∫–∞–∑–∞—Ç—å* ‚Äî –æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –∑–∞–º–µ—Ä –∏ –¥–æ—Å—Ç–∞–≤–∫—É\n"
            "‚Ä¢ *–ö–æ–Ω—Ç–∞–∫—Ç—ã* ‚Äî —É–∑–Ω–∞—Ç—å –∞–¥—Ä–µ—Å –∏ —Ç–µ–ª–µ—Ñ–æ–Ω\n"
            "‚Ä¢ *–ö–∞–Ω–∞–ª* ‚Äî –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–æ–≤–æ—Å—Ç–∏ –∏ –∞–∫—Ü–∏–∏\n"
            "‚Ä¢ *WhatsApp* ‚Äî –Ω–∞–ø–∏—Å–∞—Ç—å –Ω–∞–º –º–≥–Ω–æ–≤–µ–Ω–Ω–æ\n\n"
            "üí° –í—Å–µ –∑–∞–ø—Ä–æ—Å—ã –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –≤—Ä—É—á–Ω—É—é ‚Äî –º—ã –ø–µ—Ä–µ–∑–≤–∞–Ω–∏–≤–∞–µ–º –≤ —Ç–µ—á–µ–Ω–∏–µ 15 –º–∏–Ω—É—Ç!"
        )
        bot.reply_to(message, help_text, parse_mode='Markdown')
        print(f"‚úÖ [BOT] –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–º–æ—â–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {message.from_user.id}")
    except Exception as e:
        print(f"‚ùå [BOT] –û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ '–ü–æ–º–æ—â—å': {e}")
        import traceback
        traceback.print_exc()


# === –û–±—Ä–∞–±–æ—Ç—á–∏–∫ inline-–∫–Ω–æ–ø–æ–∫ (–¥–µ—Ç–∞–ª–∏ –∏ –∑–∞–∫–∞–∑) ===
@bot.callback_query_handler(func=lambda call: call.data.startswith('details_') or call.data.startswith('order_'))
def handle_inline_button(call):
    try:
        data = call.data
        product_name = data.split('_', 1)[1]

        if data.startswith('details_'):
            bot.answer_callback_query(call.id, text=f"–ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏: {product_name}")
            bot.send_message(
                call.message.chat.id,
                f"üìò *{product_name}*\n\n"
                "–í—ã –º–æ–∂–µ—Ç–µ –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É ¬´–ó–∞–∫–∞–∑–∞—Ç—å¬ª –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é.\n"
                "–ò–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º –≤ WhatsApp ‚Äî –º—ã –ø–æ–º–æ–∂–µ–º –ø–æ–¥–æ–±—Ä–∞—Ç—å –∏–¥–µ–∞–ª—å–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç!",
                parse_mode='Markdown'
            )

        elif data.startswith('order_'):
            bot.answer_callback_query(call.id, text=f"–ó–∞–∫–∞–∑: {product_name}")
            bot.send_message(
                call.message.chat.id,
                f"üõí –í—ã –≤—ã–±—Ä–∞–ª–∏: *{product_name}*\n\n"
                "–ß—Ç–æ–±—ã –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ:\n"
                "1. –†–∞–∑–º–µ—Ä—ã –æ–∫–Ω–∞ (—à–∏—Ä–∏–Ω–∞ √ó –≤—ã—Å–æ—Ç–∞ –≤ —Å–º)\n"
                "2. –¶–≤–µ—Ç –∏–ª–∏ —Ç–µ–∫—Å—Ç—É—Ä–∞\n"
                "3. –ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏\n\n"
                "–Ø –ø–µ—Ä–µ–∑–≤–æ–Ω—é –≤–∞–º –≤ —Ç–µ—á–µ–Ω–∏–µ 15 –º–∏–Ω—É—Ç!",
                parse_mode='Markdown'
            )

    except Exception as e:
        print(f"‚ùå [INLINE] –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ inline-–∫–Ω–æ–ø–∫–∏: {e}")
        import traceback
        traceback.print_exc()


# === üìû –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ó–∞–∫–∞–∑–∞—Ç—å –∑–≤–æ–Ω–æ–∫" ===
@bot.callback_query_handler(func=lambda call: call.data == "request_call")
def request_call_handler(call):
    try:
        user = call.from_user

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∑–∞–ø—Ä–æ—Å–æ–º –Ω–æ–º–µ—Ä–∞
        bot.answer_callback_query(call.id)
        msg = bot.send_message(
            call.message.chat.id,
            "üìû *–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞*, –∏ –º—ã –ø–µ—Ä–µ–∑–≤–æ–Ω–∏–º –≤–∞–º –≤ —Ç–µ—á–µ–Ω–∏–µ 5 –º–∏–Ω—É—Ç!\n\n"
            "üì± –í—ã –º–æ–∂–µ—Ç–µ:\n"
            "‚Ä¢ –ù–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É *¬´–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä¬ª* –Ω–∏–∂–µ\n"
            "‚Ä¢ –ò–ª–∏ –≤–≤–µ—Å—Ç–∏ –Ω–æ–º–µ—Ä –≤—Ä—É—á–Ω—É—é (–Ω–∞–ø—Ä–∏–º–µ—Ä: `+79271234567`)",
            parse_mode='Markdown',
            reply_markup=types.ReplyKeyboardMarkup(
                row_width=1,
                resize_keyboard=True,
                one_time_keyboard=True
            ).add(
                types.KeyboardButton("üì≤ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–æ–π –Ω–æ–º–µ—Ä", request_contact=True)
            )
        )

        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥ ‚Äî –æ–∂–∏–¥–∞–µ–º –Ω–æ–º–µ—Ä
        bot.register_next_step_handler(msg, process_phone_number, user.first_name)

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ request_call_handler: {e}")


def process_phone_number(message, user_name):
    try:
        phone = None

        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª –∫–æ–Ω—Ç–∞–∫—Ç
        if message.contact:
            phone = message.contact.phone_number
        # –ï—Å–ª–∏ –≤–≤—ë–ª –≤—Ä—É—á–Ω—É—é
        elif message.text:
            phone = message.text.strip()

        if not phone:
            bot.send_message(message.chat.id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –Ω–æ–º–µ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
            return

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞—è–≤–∫—É –≤ –±–∞–∑—É
        save_call_request(message.from_user.id, user_name, phone)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
        bot.send_message(
            message.chat.id,
            f"‚úÖ –°–ø–∞—Å–∏–±–æ, {user_name}!\n\n"
            f"–ú—ã –ø–æ–ª—É—á–∏–ª–∏ –≤–∞—à –Ω–æ–º–µ—Ä: `{phone}`\n"
            "üìû –ú–µ–Ω–µ–¥–∂–µ—Ä –ø–µ—Ä–µ–∑–≤–æ–Ω–∏—Ç –≤–∞–º –≤ —Ç–µ—á–µ–Ω–∏–µ 5 –º–∏–Ω—É—Ç!",
            parse_mode='Markdown',
            reply_markup=types.ReplyKeyboardRemove()  # –£–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        )

        # –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä—É
        # notify_manager(user_name, phone)

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ process_phone_number: {e}")
        bot.send_message(message.chat.id, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")


def save_call_request(user_id, first_name, phone_number):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∑–∞—è–≤–∫—É –Ω–∞ –æ–±—Ä–∞—Ç–Ω—ã–π –∑–≤–æ–Ω–æ–∫ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"""
    conn = sqlite3.connect(DB_PATH)
    cursor = conn.cursor()
    try:
        cursor.execute('''
            INSERT INTO orders (user_id, user_name, phone, status)
            VALUES (?, ?, ?, ?)
        ''', (user_id, first_name, phone_number, "pending"))

        conn.commit()
        print(f"üìû [CALL REQUEST] –ó–∞—è–≤–∫–∞ –æ—Ç {first_name} (ID: {user_id}, –¢–µ–ª–µ—Ñ–æ–Ω: {phone_number}) —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞.")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–∞—è–≤–∫–∏: {e}")
    finally:
        conn.close()


# === üî• –í–µ–±—Ö—É–∫ –¥–ª—è Telegram ===
@app.route('/webhook', methods=['POST'])
def webhook():
    print("üì° [WEBHOOK] –ü–æ–ª—É—á–µ–Ω –≤—Ö–æ–¥—è—â–∏–π POST-–∑–∞–ø—Ä–æ—Å –æ—Ç Telegram")
    try:
        json_str = request.get_data().decode('utf-8')
        update = telebot.types.Update.de_json(json_str)
        bot.process_new_updates([update])
        return '', 200
    except Exception as e:
        print(f"‚ùå [WEBHOOK] –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: {e}")
        import traceback
        traceback.print_exc()
        return 'Error', 500


# === –≠–•–û-–û–ë–†–ê–ë–û–¢–ß–ò–ö –î–õ–Ø –û–¢–õ–ê–î–ö–ò ===
@bot.message_handler(func=lambda message: True)
def debug_echo_handler(message):
    try:
        user_info = f"ID: {message.from_user.id}, –ò–º—è: {message.from_user.first_name}"
        print(f"üì© [ECHO] –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {user_info}: '{message.text}'")
        bot.reply_to(message, "üîß [DEBUG] –ë–æ—Ç –ø–æ–ª—É—á–∏–ª –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!")
        print("‚úÖ [ECHO] –û—Ç–≤–µ—Ç —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é")
    except Exception as e:
        print(f"‚ùå [ECHO] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç–≤–µ—Ç–∞: {e}")
        import traceback
        traceback.print_exc()


# === –ê–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥ –≤ –∫–∞–Ω–∞–ª ===
def send_scheduled_posts():
    """–§–æ–Ω–æ–≤–∞—è –∑–∞–¥–∞—á–∞: –ø—É–±–ª–∏–∫—É–µ—Ç –ø–æ—Å—Ç—ã –≤ –∫–∞–Ω–∞–ª–µ –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é"""
    print("‚è±Ô∏è [AUTOPOST] –ó–∞–¥–∞—á–∞ –∞–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥–∞ –∑–∞–ø—É—â–µ–Ω–∞")
    while True:
        try:
            now = datetime.now().strftime('%Y-%m-%d %H:%M:%S')
            conn = sqlite3.connect(DB_PATH)
            cursor = conn.cursor()

            cursor.execute("""
                SELECT id, title, content, image_url, category 
                FROM smm_content 
                WHERE is_published = 0 
                AND scheduled_time <= ?
                ORDER BY scheduled_time
                LIMIT 1
            """, (now,))

            row = cursor.fetchone()
            if row:
                content_id, title, content, image_url, category = row
                message = f"""
üìå <b>{title}</b>

{content}

#{category.replace(' ', '_')}
                """
                try:
                    if image_url and "placeholder" not in image_url.lower():
                        bot.send_photo(CHANNEL_ID, image_url.strip(), caption=message, parse_mode='HTML')
                    else:
                        bot.send_message(CHANNEL_ID, message, parse_mode='HTML')
                    cursor.execute("UPDATE smm_content SET is_published = 1 WHERE id = ?", (content_id,))
                    conn.commit()
                    print(f"‚úÖ [AUTOPOST] –ü–æ—Å—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω: {title}")
                except Exception as e:
                    print(f"‚ùå [AUTOPOST] –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ –∫–∞–Ω–∞–ª {CHANNEL_ID}: {e}")
            conn.close()
        except Exception as e:
            print(f"‚ùå [AUTOPOST] –û—à–∏–±–∫–∞ –≤ –∑–∞–¥–∞—á–µ –∞–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥–∞: {e}")
        time.sleep(60)

def start_autoposting():
    thread = threading.Thread(target=send_scheduled_posts, daemon=True)
    thread.start()
    print("üßµ [AUTOPOST] –ê–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥ –∑–∞–ø—É—â–µ–Ω –∫–∞–∫ —Ñ–æ–Ω–æ–≤—ã–π –ø–æ—Ç–æ–∫")


# === –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ (health-check) ===
@app.route('/')
def home():
    return jsonify({
        "status": "running",
        "service": "BlindStyle SMM Bot Service",
        "version": "1.6",
        "message": "Bot is online. Webhook is set to /webhook"
    }), 200

# === HEAD / –¥–ª—è Gunicorn ===
@app.route('/', methods=['HEAD'])
def head():
    return '', 200


# === –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–µ–±—Ö—É–∫–∞ ===
def set_webhook():
    # üõ† –ò–°–ü–†–ê–í–õ–ï–ù–û: .strip() —É–¥–∞–ª—è–µ—Ç –ø—Ä–æ–±–µ–ª—ã –≤ –Ω–∞—á–∞–ª–µ –∏ –∫–æ–Ω—Ü–µ —Å—Ç—Ä–æ–∫–∏
    hostname = os.getenv('HOSTNAME', 'alekuk999-telegram-blinds-bot--f681.twc1.net').strip()
    # üî• –ò–°–ü–†–ê–í–õ–ï–ù–û: –£–ë–†–ê–ù –ü–û–†–¢ 8000, –ò–°–ü–û–õ–¨–ó–£–ï–ú 443 (—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π HTTPS)
    webhook_url = f"https://{hostname}/webhook"  # ‚Üê –ü–û–†–¢ 443 –ü–û–î–†–ê–ó–£–ú–ï–í–ê–ï–¢–°–Ø –ü–û –£–ú–û–õ–ß–ê–ù–ò–Æ

    print(f"üîß [WEBHOOK] –ü–æ–ø—ã—Ç–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤–µ–±—Ö—É–∫ –Ω–∞: {webhook_url}")

    try:
        # üõ† –ò–°–ü–†–ê–í–õ–ï–ù–û: –£–ë–†–ê–õ–ò remove_webhook() ‚Äî –æ–Ω –≤—ã–∑—ã–≤–∞–µ—Ç 404
        # result_remove = bot.remove_webhook()

        time.sleep(1)

        result_set = bot.set_webhook(url=webhook_url)
        if result_set:
            print(f"‚úÖ [WEBHOOK] –í–µ–±—Ö—É–∫ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {webhook_url}")
        else:
            print(f"‚ùå [WEBHOOK] –ú–µ—Ç–æ–¥ set_webhook –≤–µ—Ä–Ω—É–ª False –¥–ª—è URL: {webhook_url}")
    except Exception as e:
        print(f"‚ùå [WEBHOOK] –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –≤–µ–±—Ö—É–∫–∞: {e}")
        import traceback
        traceback.print_exc()


# === –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ===
def initialize():
    print("üîÑ [INIT] –ù–∞—á–∏–Ω–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é...")
    init_db()
    add_sample_data()
    set_webhook()
    start_autoposting()
    print("‚úÖ [INIT] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")


# üî•üî•üî• –í–ê–ñ–ù–ï–ô–®–ê–Ø –ß–ê–°–¢–¨ üî•üî•üî•
# –í—ã–∑—ã–≤–∞–µ–º initialize() –°–†–ê–ó–£ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ ‚Äî —ç—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–ª—è Render + Gunicorn
initialize()

# === –ó–∞–ø—É—Å–∫ (Gunicorn –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —ç—Ç—É —Ç–æ—á–∫—É –≤—Ö–æ–¥–∞) ===
if __name__ == '__main__':
    app.run(host='0.0.0.0', port=PORT, debug=False)
